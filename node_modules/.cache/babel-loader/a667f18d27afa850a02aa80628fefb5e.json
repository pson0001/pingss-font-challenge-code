{"ast":null,"code":"import _regeneratorRuntime from \"/Users/pings/Desktop/pingss-font-challenge/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/pings/Desktop/pingss-font-challenge/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/pings/Desktop/pingss-font-challenge/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pings/Desktop/pingss-font-challenge/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pings/Desktop/pingss-font-challenge/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pings/Desktop/pingss-font-challenge/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pings/Desktop/pingss-font-challenge/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/pings/Desktop/pingss-font-challenge/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { Helmet } from \"react-helmet\";\nvar API_KEY = 'AIzaSyAJNRET1i72IoEvCwsonTd6TevKHelOqBU';\nvar fontDict = {};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      flipped: false,\n      dict: fontDict,\n      sansSerifNumber: 0\n    };\n\n    _this.toggle =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var min, sansSerifMax, chooseFont, colorLetters, colory, i, direction, chooseBackOp, chooseFlipOp;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault(); // Random pick font\n\n                min = 0;\n                sansSerifMax = _this.state.dict['sans-serif'].length;\n                chooseFont = _this.state.dict['sans-serif'][Math.round(Math.random() * sansSerifMax - 1, 0)]; // Random pick color\n\n                colorLetters = '0123456789ABCDEF';\n                colory = '#';\n\n                for (i = 0; i < 6; i++) {\n                  colory += colorLetters[Math.floor(Math.random() * 16)];\n                } // Random pick XY\n\n\n                direction = Math.floor(Math.random() * Math.floor(2));\n                chooseBackOp = '';\n                chooseFlipOp = '';\n                console.log(direction);\n\n                if (direction === 0) {\n                  chooseBackOp = 'rotateX(180deg)';\n                  chooseFlipOp = 'rotateX(540deg)';\n                } else {\n                  chooseBackOp = 'rotateY(180deg)';\n                  chooseFlipOp = 'rotateY(540deg)';\n                }\n\n                _this.setState({\n                  flipped: !_this.state.flipped,\n                  sansSerifNumber: Math.round(Math.random() * sansSerifMax, 0),\n                  sansSerifFont: chooseFont,\n                  sansSerifFontUrl: \"https://fonts.googleapis.com/css?family=\" + chooseFont,\n                  color: colory,\n                  chooseBack: chooseBackOp,\n                  chooseFlip: chooseFlipOp\n                });\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      fetch(\"https://www.googleapis.com/webfonts/v1/webfonts?key=\".concat(API_KEY)).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        var sansSerif = [];\n        var serif = [];\n        var monospace = [];\n\n        for (var i = 0; i < data.items.length; i++) {\n          if (data.items[i].category === \"sans-serif\") {\n            sansSerif.push(data.items[i].family);\n          } else if (data.items[i].category === \"serif\") {\n            serif.push(data.items[i].family);\n          } else if (data.items[i].category === \"monospace\") {\n            monospace.push(data.items[i].family);\n          }\n        }\n\n        fontDict['sans-serif'] = sansSerif;\n        fontDict['serif'] = serif;\n        fontDict['monospace'] = monospace; //console.log(fontDict);\n      });\n    }\n  }, {\n    key: \"letter\",\n    value: function letter() {\n      var titleString = 'Ping';\n      var titleList = titleString.split('');\n      var cardClass = [\"card\"];\n\n      if (this.state.flipped) {\n        cardClass.push('flipped');\n      }\n\n      return titleList.map(function (title) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: cardClass.join(' '),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"front\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, title), React.createElement(\"div\", {\n          className: \"backX\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, title)), React.createElement(\"div\", {\n          className: cardClass.join(' '),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"front\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, title), React.createElement(\"div\", {\n          className: \"backY\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, title)));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(Helmet, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"link\", {\n        href: this.state.sansSerifFontUrl,\n        rel: \"stylesheet\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"container\",\n        style: {\n          backgroundColor: this.state.color,\n          fontFamily: this.state.sansSerifFont\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, this.letter()), this.state.sansSerifFont, React.createElement(\"div\", {\n        style: {\n          backgroundColor: this.state.color\n        },\n        className: \"box\",\n        onClick: this.toggle.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Click Me\"));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/pings/Desktop/pingss-font-challenge/src/App.js"],"names":["React","Component","Helmet","API_KEY","fontDict","App","state","flipped","dict","sansSerifNumber","toggle","e","preventDefault","min","sansSerifMax","length","chooseFont","Math","round","random","colorLetters","colory","i","floor","direction","chooseBackOp","chooseFlipOp","console","log","setState","sansSerifFont","sansSerifFontUrl","color","chooseBack","chooseFlip","fetch","then","res","json","data","sansSerif","serif","monospace","items","category","push","family","titleString","titleList","split","cardClass","map","title","join","backgroundColor","fontFamily","letter","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport {Helmet} from \"react-helmet\";\n\n\nconst API_KEY = 'AIzaSyAJNRET1i72IoEvCwsonTd6TevKHelOqBU';\nconst fontDict = {};\n\nclass App extends Component {\n  state = {\n    flipped: false,\n    dict:fontDict,\n    sansSerifNumber: 0\n  }\n\n  componentDidMount(){\n    fetch(`https://www.googleapis.com/webfonts/v1/webfonts?key=${API_KEY}`)\n    .then(res => res.json())\n    .then(data => {\n      let sansSerif = []\n      let serif = []\n      let monospace = []\n      for(let i = 0 ; i< data.items.length; i++){\n        if (data.items[i].category === \"sans-serif\"){\n          sansSerif.push(data.items[i].family);\n        }\n        else if (data.items[i].category === \"serif\"){\n          serif.push(data.items[i].family);\n        }\n        else if (data.items[i].category === \"monospace\"){\n          monospace.push(data.items[i].family);\n        }\n      }\n      fontDict['sans-serif'] = sansSerif;\n      fontDict['serif'] = serif;\n      fontDict['monospace'] = monospace;\n      //console.log(fontDict);\n    })\n  }\n\n  toggle = async(e) => {\n    e.preventDefault();\n    // Random pick font\n    let min = 0;\n    let sansSerifMax = this.state.dict['sans-serif'].length\n    let chooseFont = this.state.dict['sans-serif'][Math.round(Math.random() * sansSerifMax - 1, 0)]\n\n    // Random pick color\n    var colorLetters = '0123456789ABCDEF';\n    var colory = '#';\n    for (var i = 0; i < 6; i++ ) {\n      colory += colorLetters[Math.floor(Math.random() * 16)];\n    }\n\n    // Random pick XY\n    let direction = Math.floor(Math.random() * Math.floor(2))\n    var chooseBackOp = ''\n    var chooseFlipOp = ''\n    console.log(direction);\n    if (direction === 0){\n      chooseBackOp = 'rotateX(180deg)';\n      chooseFlipOp = 'rotateX(540deg)';\n    }else{\n      chooseBackOp = 'rotateY(180deg)';\n      chooseFlipOp = 'rotateY(540deg)';\n    }\n\n    this.setState({\n      flipped: !this.state.flipped,\n      sansSerifNumber: Math.round(Math.random() * sansSerifMax , 0),\n      sansSerifFont: chooseFont,\n      sansSerifFontUrl: \"https://fonts.googleapis.com/css?family=\" + chooseFont,\n      color: colory,\n      chooseBack: chooseBackOp,\n      chooseFlip: chooseFlipOp\n    });\n  }\n\n\n\n  letter(){\n    const titleString = 'Ping'\n    const titleList = titleString.split('')\n    let cardClass = [\"card\"];\n    if(this.state.flipped) {\n      cardClass.push('flipped');\n    }\n\n    return(titleList.map((title) =>\n    <div>\n      <div className={cardClass.join(' ')}>\n        <div className=\"front\">{title}</div>\n        <div className=\"backX\">{title}</div>\n      </div>\n      <div className={cardClass.join(' ')}>\n        <div className=\"front\">{title}</div>\n        <div className=\"backY\">{title}</div>\n      </div>\n    </div>\n  ))\n}\n\nrender() {\n\n  return(\n    <div >\n      <Helmet>\n        <link href={this.state.sansSerifFontUrl} rel=\"stylesheet\"></link>\n      </Helmet>\n      <div className=\"container\" style={{backgroundColor:this.state.color,fontFamily:this.state.sansSerifFont}}>\n        {this.letter()}\n      </div>\n      {this.state.sansSerifFont}\n      <div style={{backgroundColor:this.state.color}} className='box' onClick={this.toggle.bind(this)}>Click Me</div>\n    </div>\n\n  );\n}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}