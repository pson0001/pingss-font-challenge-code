{"ast":null,"code":"import _regeneratorRuntime from \"/Users/pings/Desktop/pingss-font-challenge/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/pings/Desktop/pingss-font-challenge/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/pings/Desktop/pingss-font-challenge/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pings/Desktop/pingss-font-challenge/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pings/Desktop/pingss-font-challenge/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pings/Desktop/pingss-font-challenge/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pings/Desktop/pingss-font-challenge/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/pings/Desktop/pingss-font-challenge/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { Helmet } from \"react-helmet\";\nvar API_KEY = 'AIzaSyAJNRET1i72IoEvCwsonTd6TevKHelOqBU';\nvar fontDict = {};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      flipped: false,\n      dict: fontDict,\n      sansSerifNumber: 0\n    };\n\n    _this.toggle =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var min, sansSerifMax;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                min = 0;\n                sansSerifMax = _this.state.fontDict.sans - serif;\n                console.log(sansSerifMax);\n\n                _this.setState({\n                  flipped: !_this.state.flipped,\n                  sansSerifNumber: Math.random()\n                });\n\n                console.log(_this.state.sansSerifNumber);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      fetch(\"https://www.googleapis.com/webfonts/v1/webfonts?key=\".concat(API_KEY)).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        var sansSerif = [];\n        var serif = [];\n        var monospace = [];\n\n        for (var i = 0; i < data.items.length; i++) {\n          if (data.items[i].category === \"sans-serif\") {\n            sansSerif.push(data.items[i].family);\n          } else if (data.items[i].category === \"serif\") {\n            serif.push(data.items[i].family);\n          } else if (data.items[i].category === \"monospace\") {\n            monospace.push(data.items[i].family);\n          }\n        }\n\n        fontDict['sans-serif'] = sansSerif;\n        fontDict['serif'] = serif;\n        fontDict['monospace'] = monospace;\n        console.log(fontDict);\n      });\n    }\n  }, {\n    key: \"letter\",\n    value: function letter() {\n      var titleList = ['P', 'I', 'N', 'G'];\n      var cardClass = [\"card\"];\n\n      if (this.state.flipped) {\n        cardClass.push('flipped');\n      }\n\n      return titleList.map(function (title) {\n        return React.createElement(\"div\", {\n          className: cardClass.join(' '),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"front\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, title), React.createElement(\"div\", {\n          className: \"back\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, title));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var boxClass = [\"box\"];\n\n      if (this.state.flipped) {\n        boxClass.push('green');\n      }\n\n      var divStyle = {\n        fontFamily: 'Oxygen',\n        border: '5px solid pink'\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Helmet, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"link\", {\n        href: \"https://fonts.googleapis.com/css?family=Oxygen\",\n        rel: \"stylesheet\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, this.letter()), this.state.sansSerifNumber, React.createElement(\"div\", {\n        style: divStyle,\n        className: boxClass.join(' '),\n        onClick: this.toggle.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Click Me\"));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/pings/Desktop/pingss-font-challenge/src/App.js"],"names":["React","Component","Helmet","API_KEY","fontDict","App","state","flipped","dict","sansSerifNumber","toggle","e","preventDefault","min","sansSerifMax","sans","serif","console","log","setState","Math","random","fetch","then","res","json","data","sansSerif","monospace","i","items","length","category","push","family","titleList","cardClass","map","title","join","boxClass","divStyle","fontFamily","border","letter","bind"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,SAAQC,MAAR,QAAqB,cAArB;AAGA,IAAMC,OAAO,GAAG,yCAAhB;AACA,IAAMC,QAAQ,GAAG,EAAjB;;IAEMC,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,OAAO,EAAE,KADH;AAENC,MAAAA,IAAI,EAACJ,QAFC;AAGNK,MAAAA,eAAe,EAAE;AAHX,K;;UA+BRC,M;;;;;+BAAS,iBAAMC,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACPA,gBAAAA,CAAC,CAACC,cAAF;AACMC,gBAAAA,GAFC,GAEK,CAFL;AAGDC,gBAAAA,YAHC,GAGc,MAAKR,KAAL,CAAWF,QAAX,CAAoBW,IAApB,GAAyBC,KAHvC;AAIPC,gBAAAA,OAAO,CAACC,GAAR,CAAYJ,YAAZ;;AACA,sBAAKK,QAAL,CAAc;AACZZ,kBAAAA,OAAO,EAAE,CAAC,MAAKD,KAAL,CAAWC,OADT;AAEZE,kBAAAA,eAAe,EAAEW,IAAI,CAACC,MAAL;AAFL,iBAAd;;AAIAJ,gBAAAA,OAAO,CAACC,GAAR,CAAY,MAAKZ,KAAL,CAAWG,eAAvB;;AATO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;wCAzBU;AACjBa,MAAAA,KAAK,+DAAwDnB,OAAxD,EAAL,CACCoB,IADD,CACM,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADT,EAECF,IAFD,CAEM,UAAAG,IAAI,EAAI;AACZ,YAAIC,SAAS,GAAG,EAAhB;AACA,YAAIX,KAAK,GAAG,EAAZ;AACA,YAAIY,SAAS,GAAG,EAAhB;;AACA,aAAI,IAAIC,CAAC,GAAG,CAAZ,EAAgBA,CAAC,GAAEH,IAAI,CAACI,KAAL,CAAWC,MAA9B,EAAsCF,CAAC,EAAvC,EAA0C;AACxC,cAAIH,IAAI,CAACI,KAAL,CAAWD,CAAX,EAAcG,QAAd,KAA2B,YAA/B,EAA4C;AAC1CL,YAAAA,SAAS,CAACM,IAAV,CAAeP,IAAI,CAACI,KAAL,CAAWD,CAAX,EAAcK,MAA7B;AACD,WAFD,MAGK,IAAIR,IAAI,CAACI,KAAL,CAAWD,CAAX,EAAcG,QAAd,KAA2B,OAA/B,EAAuC;AAC1ChB,YAAAA,KAAK,CAACiB,IAAN,CAAWP,IAAI,CAACI,KAAL,CAAWD,CAAX,EAAcK,MAAzB;AACD,WAFI,MAGA,IAAIR,IAAI,CAACI,KAAL,CAAWD,CAAX,EAAcG,QAAd,KAA2B,WAA/B,EAA2C;AAC9CJ,YAAAA,SAAS,CAACK,IAAV,CAAeP,IAAI,CAACI,KAAL,CAAWD,CAAX,EAAcK,MAA7B;AACD;AACF;;AACD9B,QAAAA,QAAQ,CAAC,YAAD,CAAR,GAAyBuB,SAAzB;AACAvB,QAAAA,QAAQ,CAAC,OAAD,CAAR,GAAoBY,KAApB;AACAZ,QAAAA,QAAQ,CAAC,WAAD,CAAR,GAAwBwB,SAAxB;AACAX,QAAAA,OAAO,CAACC,GAAR,CAAYd,QAAZ;AACD,OArBD;AAsBD;;;6BAgBO;AACN,UAAM+B,SAAS,GAAG,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,CAAlB;AACA,UAAIC,SAAS,GAAG,CAAC,MAAD,CAAhB;;AACA,UAAG,KAAK9B,KAAL,CAAWC,OAAd,EAAuB;AACrB6B,QAAAA,SAAS,CAACH,IAAV,CAAe,SAAf;AACD;;AAED,aAAOE,SAAS,CAACE,GAAV,CAAc,UAACC,KAAD;AAAA,eACrB;AAAK,UAAA,SAAS,EAAEF,SAAS,CAACG,IAAV,CAAe,GAAf,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAwBD,KAAxB,CADF,EAEE;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAuBA,KAAvB,CAFF,CADqB;AAAA,OAAd,CAAP;AAOH;;;6BAEQ;AACP,UAAIE,QAAQ,GAAG,CAAC,KAAD,CAAf;;AACA,UAAG,KAAKlC,KAAL,CAAWC,OAAd,EAAuB;AACrBiC,QAAAA,QAAQ,CAACP,IAAT,CAAc,OAAd;AACD;;AACD,UAAMQ,QAAQ,GAAG;AACfC,QAAAA,UAAU,EAAE,QADG;AAEfC,QAAAA,MAAM,EAAE;AAFO,OAAjB;AAOA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,IAAI,EAAC,gDAAX;AAA4D,QAAA,GAAG,EAAC,YAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKC,MAAL,EADH,CAJF,EAOG,KAAKtC,KAAL,CAAWG,eAPd,EAQE;AAAK,QAAA,KAAK,EAAEgC,QAAZ;AAAsB,QAAA,SAAS,EAAED,QAAQ,CAACD,IAAT,CAAc,GAAd,CAAjC;AAAqD,QAAA,OAAO,EAAE,KAAK7B,MAAL,CAAYmC,IAAZ,CAAiB,IAAjB,CAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF,CADF;AAaD;;;;EAvFiB5C,S;;AA0FlB,eAAeI,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport {Helmet} from \"react-helmet\";\n\n\nconst API_KEY = 'AIzaSyAJNRET1i72IoEvCwsonTd6TevKHelOqBU';\nconst fontDict = {};\n\nclass App extends Component {\n  state = {\n    flipped: false,\n    dict:fontDict,\n    sansSerifNumber: 0\n  }\n\n  componentDidMount(){\n    fetch(`https://www.googleapis.com/webfonts/v1/webfonts?key=${API_KEY}`)\n    .then(res => res.json())\n    .then(data => {\n      let sansSerif = []\n      let serif = []\n      let monospace = []\n      for(let i = 0 ; i< data.items.length; i++){\n        if (data.items[i].category === \"sans-serif\"){\n          sansSerif.push(data.items[i].family);\n        }\n        else if (data.items[i].category === \"serif\"){\n          serif.push(data.items[i].family);\n        }\n        else if (data.items[i].category === \"monospace\"){\n          monospace.push(data.items[i].family);\n        }\n      }\n      fontDict['sans-serif'] = sansSerif;\n      fontDict['serif'] = serif;\n      fontDict['monospace'] = monospace;\n      console.log(fontDict);\n    })\n  }\n\n  toggle = async(e) => {\n    e.preventDefault();\n    const min = 0;\n    const sansSerifMax = this.state.fontDict.sans-serif\n    console.log(sansSerifMax);\n    this.setState({\n      flipped: !this.state.flipped,\n      sansSerifNumber: Math.random()\n    });\n    console.log(this.state.sansSerifNumber)\n  }\n\n\n\n  letter(){\n    const titleList = ['P','I','N','G']\n    let cardClass = [\"card\"];\n    if(this.state.flipped) {\n      cardClass.push('flipped');\n    }\n\n    return(titleList.map((title) =>\n    <div className={cardClass.join(' ')}>\n      <div className=\"front\">{title}</div>\n      <div className=\"back\">{title}</div>\n    </div>\n\n  ))\n}\n\nrender() {\n  let boxClass = [\"box\"];\n  if(this.state.flipped) {\n    boxClass.push('green');\n  }\n  const divStyle = {\n    fontFamily: 'Oxygen',\n    border: '5px solid pink'\n  };\n\n\n\n  return(\n    <div >\n      <Helmet>\n        <link href=\"https://fonts.googleapis.com/css?family=Oxygen\" rel=\"stylesheet\"></link>\n      </Helmet>\n      <div className=\"container\">\n        {this.letter()}\n      </div>\n      {this.state.sansSerifNumber}\n      <div style={divStyle} className={boxClass.join(' ')} onClick={this.toggle.bind(this)}>Click Me</div>\n    </div>\n\n  );\n}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}